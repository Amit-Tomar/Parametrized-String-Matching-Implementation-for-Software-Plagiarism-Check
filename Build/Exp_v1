

--------------------------------

JITENDRA KUMAR PATEL_175221_assignsubmission_file_expr_v1_MT2014044.c
MT2014077 Nishant Goyal_175417_assignsubmission_file_expr_v1_MT2014077.c


resolveexpression(char * expression, int val);
int resolve(int varOne, char sign, int varTwo);

int myStack[100];
int tos = 0;

int main() {
	char expression[500], expr2[500];
	int i = -1;
	int inValue[100];
	int j = 0, k = 0;
	int outval[100];
	scanf("%[^\n]s", expr2);
	while (expr2[j] != '\0') {
		if (expr2[j] != ' ') {
			expression[k] = expr2[j];
			k++;
		}
		j++;
	}
	expression[k] = '\0';
	do {
		i++;
		scanf("%d", &inValue[i]);
	} while (inValue[i] != 1000);
	//printf("%d\n", myStack[--tos]);
	printf("%s\n", expression);
	for (j = 0; j < i; j++) {
		outval[j] = resolveexpression(expression, inValue[j]);
		printf("%c[%d]=%d\n", expression[0], inValue[j], outval[j]);
	}
	//printf("%c\n", variable);
	return 0;

}
int resolveexpression(char * expression, int val) {
	int i = 5;
	int varOne, varTwo;
	char sign;
	char variable;
	int temp;tos = 0;
	char c;
	//int valueOfExpression;
	variable = expression[2];
	while ((c = expression[i]) != '\0') {
		if (c == variable && (tos == 0 || tos == 2)) {
			myStack[tos++] = val;
		} else if (c == '+' || c == '-' || c == '*' || c == '/' || c == '^') {
			if (tos == 3) {
				varTwo = myStack[--tos];
				sign = myStack[--tos];
				varOne = myStack[--tos];
				myStack[tos++] = resolve(varOne, sign, varTwo);
				myStack[tos++] = c;
			} else {
				myStack[tos++] = c;
			}
		} else if (c >= '0' && c <= '9') {
			if (tos == 0 || tos == 2) {
				myStack[tos++] = c - 48;
			} else {
				temp = myStack[--tos];
				myStack[tos] = temp * 10 + (c - 48);
				tos++;
			}
		} else {
			printf("Invalid string");
		}
		i++;
	}
	varTwo = myStack[--tos];
	sign = myStack[--tos];
	varOne = myStack[--tos];
	myStack[tos++] = resolve(varOne, sign, varTwo);
	return myStack[tos - 1];

}
int resolve(int varOne, char sign, int varTwo) {
	int result = 1, i;
	if (sign == '^') {
		for (i = 1; i <= varTwo; i++) {
			result = result * varOne;
		}
	} else if (sign == '+') {
		result = varOne + varTwo;
	} else if (sign == '-') {
		result = varOne - varTwo;
	} else if (sign == '*') {
		result = varOne * varTwo;
	} else if (sign == '/') {
		result = varOne / varTwo;
	}
	return result;
}


--------------------------------

MT2014006 Anisha Lunawat_147600_assignsubmission_file_expr_v1_MT2014006.c
MT2014015 Arpit Kashyap_168546_assignsubmission_file_expr_v1_MT2014015.c


q=k;
		break;
		}
	for(i=strlen(exp)-1;i>=0;i--){
		if((exp[i]=='+')||(exp[i]=='-')||(exp[i]=='*')||(exp[i]=='/')||(exp[i]=='^')){
		pushoperator(operator,exp[i]);
		check=0;	
		}
		else if(exp[i]>='a' && exp[i]<='z'){
		d=exp[i];
		pushoperand(operand,tem);
		}
		else if(exp[i]==' '){
		continue;
		}
		else if(exp[i]=='=')break;
		else {
		temp1=exp[i]-48;
			if(check!=0){
			q=popoperand(operand);
			q=q+temp1*pow(10,check);
			pushoperand(operand,q);		
			}
			else{
			pushoperand(operand,temp1);
				}
		check++;
		}

	}
	q=top2;
	for(i=0;i<=q;i++){
		temp1=popoperand(operand);
		temp=popoperand(operand);
		op=popoperator(operator);
	
	switch(op){
		case '+':pushoperand(operand,temp1+temp);break;
		case '-':pushoperand(operand,temp1-temp);break;
		case '*':pushoperand(operand,temp1*temp);break;
		case '/':pushoperand(operand,temp1/temp);break;
		case '^':pushoperand(operand,pow(temp1,temp));break;
		}
	}

a[k]=popoperand(operand);
k++;
}


for(i=0;i<strlen(exp);i++){
printf("%c",exp1[i]);
}

for(k=0;k<q;k++){
printf("\nP(%d)=%d",

--------------------------------

MT2014009 Ankit Mishra_173755_assignsubmission_file_expr_v1_MT2014009.c
MT2014039 Hemnani Mohit Mahesh_158585_assignsubmission_file_expr_v1_MT2014039.c



{
	int result=0;int temp1;int j;
	switch(z)

	{
		case '+':
		result=x+y;
		break;
			
		case '-':
		result=x-y;
		break;
		
		case '*':
		result=x*y;
		break;
		
		case '/':
		result=x/y;
		break;
		
		case '^':
		result=

--------------------------------

MT2014010 Ankit Ratnawat_153796_assignsubmission_file_expr_v1_MT2014010.c
MT2014068 Mujahid Ali_177504_assignsubmission_file_expr_v1_MT2014068.c


2[r]=='^')
        {
                       t=temp;
                     for( j=0;j<s1[i]-1;j++)
                     {
                             
                             temp=temp*t;
                             }
                           r++;
                      }             
       else if(s2[r]=='+')
        {
                    temp=temp+s1[i];
              r++;
                      }             
   else  if(s2[r]=='-')
        {
                   temp=temp-s1[i];
        
                 r++;     }             
   else if(s2[r]=='*')
        {
                 temp=temp*s1[i];
                 r++;
                      }             
 else if(s2[r]=='/')
        {
                temp=temp/s1[i];
                r++;
                      }             
                      

--------------------------------

MT2014010 Ankit Ratnawat_153796_assignsubmission_file_expr_v1_MT2014010.c
MT2014068 Mujahid Ali_177504_assignsubmission_file_expr_v1_MT2014068.c
MT2014115 Shourya Shrivastava_176536_assignsubmission_file_expr_v1_MT2014115.c



           for( m=0;m<k;m++)
           {
            t1=1;         
             for( l=m;l<k-1;l++)
             

--------------------------------

MT2014010 Ankit Ratnawat_153796_assignsubmission_file_expr_v1_MT2014010.c
MT2014115 Shourya Shrivastava_176536_assignsubmission_file_expr_v1_MT2014115.c


        int t1=1,t2=0,l=0,m=0;
           for( m=0;m<k;m++)
           {
            t1=1;         
             for( l=m;l<k-1;l++)
             {
                     t1=t1*10;
             

--------------------------------

MT2014011 Anshika Shukla_176078_assignsubmission_file_expr_v1_MT2014011.c
MT2014037 Gazal Gupta_175471_assignsubmission_file_expr_v1_MT2014037.c


t t1=1,t2=0,l=0,m=0;
           for( m=0;m<k;m++)
           {
            t1=1;         
             for( l=m;l<k-1;l++)
             {
                     t1=t1*10;
             }
                      t1=t1*ar2[m];                     
                     
                      
                     t2=t1+t2;
                     t1=1;
                     
                     }
                     t2=t2+t1-1;
                     //printf("\n t2 is %d",t2);                           
   

--------------------------------

MT2014011 Anshika Shukla_176078_assignsubmission_file_expr_v1_MT2014011.c
MT2014037 Gazal Gupta_175471_assignsubmission_file_expr_v1_MT2014037.c
MT2014076 Neha Upadhyay_175878_assignsubmission_file_expr_v1_MT2014076.c


int t1=1,t2=0,l=0,m=0;
           for( m=0;m<k;m++)
           {
            t1=1;         
             for( l=m;l<k-1;l++)
             {
                     t1=t1*10;
             }
                      t1=t1*ar2[m];                     
                     
                      
                     t2=t1+t2;
                     t1=1;
                     
                     }
                     t2=t2+t1-1;
                     //printf("\n t2 is %d",t2);                           
   

--------------------------------

MT2014019 Atul Kumar_134875_assignsubmission_file_expr_v1_MT2014019.c
MT2014029 Deshpande Saurabh Narayanrao_138403_assignsubmission_file_ expr_v1_MT2014029.c


  continue;
      }
      else if ( num ==43  || num ==45 || num ==42 || num ==47 || num == 94 || num == 241) 

--------------------------------

MT2014021 Banthiya Anuja Vilas_166893_assignsubmission_file_expr_v1_MT2014021.c
MT2014032 Divya Rao_164586_assignsubmission_file_expr_v1_MT2014032.c


,int n, int res,int x)
{
	int i=0;
	char temp[10];
	int pos=0;
	int check = 0;
	char op='\0';

	for(i=0;i<n;i++)
	{
		/*first number*/
		if((check==0)&&(arr[i]>='0')&&(arr[i]<='9'))
		{
			pos=0;
			temp[pos]=arr[i];
			temp[pos+1] = '\0';
			pos++;
			check = 1;
		}
		/*second number */

		else if ((check==1)&&(arr[i]>='0')&&(arr[i]<='9'))
		{
			temp[pos]=arr[i];
			temp[pos+1] = '\0';
			pos++;

		}
		/*number end*/
		else
		{
			if(pos>0) 
				{
				if (op=='\0') 
					res =atoi(temp);
				else 
					res=sol

--------------------------------

MT2014033 Gadi Hemanth Kumar Reddy_138446_assignsubmission_file_expr_v1_MT2014033.c
MT2014050 Kasireddy Praveen Reddy_154265_assignsubmission_file_expr_v1_MT2014050.c


x;
                   k++;
                   break;
         case '0':
         case '1': 
         case '2': 
         case '3': 
         case '4': 
         case '5': 
         case '6':
         case '7': 
         case '8':  
         case '9': s

--------------------------------

MT2014037 Gazal Gupta_175471_assignsubmission_file_expr_v1_MT2014037.c
MT2014076 Neha Upadhyay_175878_assignsubmission_file_expr_v1_MT2014076.c


it(0);

for(i=0;i<len;i++)
{
    if(st[i]=='x')
    
	{
    s1[p]=x;
      
		p++;    
      
     
	}             
     
     else if(st[i]==32)
     
	{
          
          
	}
      
   
     else if(((st[i]>=48)&&(st[i]<=57))&&((st[i]!=32)))
      {
       if(!((st[i+1]>=48)&&(st[i+1]<=57)))
       {
     s1[p]=(int)st[i];
     s1[p]=s1[p]-48;
     p++;                                
    }
    else                        
      {
           k=0;
           while((st[i]>=48)&&(st[i]<=57))
           {
              ar2[a]=(int)st[i];                            
              ar2[a]=st[i]-48;
              a++;
              i++;
              k++;
           }   
           a=0;
         
           int t1=1,t2=0,l=0,m=0;
           for( m=0;m<k;m++)
           {
            t1=1;         
             for( l=m;l<k-1;l++)
             {
                     t1=t1*10;
             }
                      t1=t1*ar2[m];                     
                     
                      
                     t2=t1+t2;
                     t1=1;
                     
                     }
                     t2=t2+t1-1;
                     //printf("\n t2 is %d",t2);                           
   s1[p]=t2;
   p++;
   
   
   t1=1;
   t2=0;
   k=0;
   m=0;
   l=0;
   
   
}
}
}
 
 q=0;
 

for(i=0;st[i]!='\0';i++)
{
   if(st[i]=='x')
    {}
      else if(st[i]=='^' ||st[i]=='+'||st[i]=='-'||st[i]=='*'||st[i]=='/')
      {
      s2[q]=st[i];
      q++;
       }

}
i=0;
while(i<len)
{
  if(s2[i]==32)
  {
    i++;
   }
 else
  {
  break;
  }
i++;
} 

if(s2[i]==45)
s1[0]=-s1[0];     
     temp=s1[0];
      i=1;
      while(i<p)
    
     {  switch(s2[r])
        {
             case '^':
                    {
                       t=temp;
                     for( j=0;j<s1[i]-1;j++)
                     {
                             
                             temp=temp*t;
                             }
                           r++;
                          break;
                      }             
             case '+':
                     {
                      temp=temp+s1[i];
                      r++;
                       break;
                      }             
             case '-':
                      {
                       temp=temp-s1[i];
        
                        r++; 
                         break;   
                        }             
             case '*':
                      {
                       temp=temp*s1[i];
                        r++;
                        break;
                      }             
             case '/':
                       {
                        temp=temp/s1[i];
                        r++;
                        break;
                         }
                }
        i++;             
         }
      printf("p(%d)",x);
      printf("=%d",temp);
      printf("\n");
}
     return 0;
}


--------------------------------

MT2014059 Kuppam Bharath_170229_assignsubmission_file_expr_v1_MT2014059.c
MT2014070 Musalikunta Jyothi Sankar Reddy_176203_assignsubmission_file_expr_v1_MT2014070.c


/atoi(a);

		                   }
		                   else
		                   {
			                  res=res/x[input];
			               }


--------------------------------

MT2014068 Mujahid Ali_177504_assignsubmission_file_expr_v1_MT2014068.c
MT2014115 Shourya Shrivastava_176536_assignsubmission_file_expr_v1_MT2014115.c



           for( m=0;m<k;m++)
           {
            t1=1;         
             for( l=m;l<k-1;l++)
             

--------------------------------

MT2014070 Musalikunta Jyothi Sankar Reddy_176203_assignsubmission_file_expr_v1_MT2014070.c
MT2014135 Vijay Monic Vittamsetti_170746_assignsubmission_file_expr_v1_MT2014135.c


printf("%s",str) ;//code for extracting the string after =;
     for(i=0;strr[i]!='\0';i++)
     {
		  if(strr[i]=='=')
		  pos=i;
		 }
	

--------------------------------

MT2014090 Radhika Mandil_172059_assignsubmission_file_expr_v1_MT2014090.c
MT2014116 Shweta Mishra_175278_assignsubmission_file_expr_v1_MT2014116.c
MT2014130 Vandana Jain_174575_assignsubmission_file_expr_v1_MT2014130.c


1[25];
	int i=0,g=0;
	int j=0,ans;
	int k=0,mn;
	int pos=0,a[10];
	int chk=0;
	char temp[25],op;
	
	char a2[56];
	
	int y=0,m=0;
	
	


--------------------------------

MT2014096 Roopa Gupta_160545_assignsubmission_file_expr_v1_MT2014096.c
MT2014105 Sarada S_138687_assignsubmission_file_expr_v1_MT2014105.c


=0;
				tempnum[pos]=exp[j];
				pos++;
				while(exp[j+1]>='0' && exp[j+1]<='9')
				{
					if (exp[j+1]>='0' && exp[j+1]<='9')
					{			
						tempnum[pos]=exp[j+1];
						pos++;
						j++;
					}
				}
						tempnum[pos]='\0';
						digit=atoi(tempnum);
						pos=0;
					
				if (operator=='\0')
				{
					result[i]=digit;
				}
				else
				{
					result[i]=

--------------------------------

MT2014107 Savjani Parth Ashokbhai_142781_assignsubmission_file_expr_v1_MT2014107.c
MT2014128 Turkar Devendrakumar Gendlal_170470_assignsubmission_file_expr_v1_MT2014128.c
MT2014139 Yuvraj Verma_172094_assignsubmission_file_expr_v1_MT2014139.c


+')
	return op1+op2;
	
	if(op == '-')
	return op1-op2;
	
	if(op == '*')
	return op1*op2;
	
	if(op == '/')
	return op1/op2;
	
	if(op == '^')
	

--------------------------------

MT2014107 Savjani Parth Ashokbhai_142781_assignsubmission_file_expr_v1_MT2014107.c
MT2014139 Yuvraj Verma_172094_assignsubmission_file_expr_v1_MT2014139.c


char expr[30],op;// To store main expression & op for storing operator.
int pos=0; //Parsing pinter
int op1,op2; //Operand 1 & Operand 2

void trim_expr(); // To remove unwanted spaces from the given input exoression.
int evaluate(int); // To evaluate result for particular input value.
int power();// Returns result of first ip power second ip.
int calc();

void main()
{
	int v=0;	
	scanf("%[^\n]s",expr);
	printf("%s\n",expr);
	trim_expr();
	while(1)
	{
		scanf("%d",&v);
		if(v==1000)
		break;
		pos=op1=op2= 0;
		printf("P(%d)=%d\n",v,evaluate(v)); 
	}
}

void trim_expr ()
{
	char texpr[30];
	int i,j;
	i=j=0;
	
	while(expr[i] != '=')//skip till '='
		i++;
	
	i++;
	
	while(expr[i]!= '\0')//trim blank spaces
	{	
		if(expr[i] != ' ')
		{
			texpr[j]= expr[i];
			j++;
		}
		i++;
	}
	texpr[j]='\0';
	j=0;
	
	do //copy to original expression
	{
		expr[j] = texpr[j];
		j++;
	}while(texpr[j]!='\0');
	
	expr[j]='\0';
}

int get_operand()
{
	char temp[8];
	int k=0;
	
	if((expr[pos]>='a')&&(expr[pos]<='z')) //If its variable then advance pointer and return -1
	{
		pos++;
		return -1;
	}
	
	while((expr[pos]>='0')&&(expr[pos]<='9')&& expr[pos] != '\0')// generate a constant number(multidigit) string
	{				
		temp[k] = expr[pos];
		pos++;
		k++;
	}
	
	temp[k] = '\0';
	
	return atoi(temp);	//convert constat number string to integer and return it
}

int evaluate(int val)
{

	int k =0;	
	
	k = get_operand(); // if k = -1 indicates variable so assign value directly.
	if(k== -1)
	op1  = val;
	else
	op1 = k;
	
	while (expr[pos]!='\0')
	{				
		op = expr[pos];// store operation need to be performed.
		pos++;
		k = get_operand();
		
		if(k== -1)
			op2  = val;
		else
			op2 = k;		
		
		op1 = calc();// calculate op1 op op2 and set return value to op1
		
	}
	
	return op1;
	
}
int calc() // body says all. ;)
{	
	if(op == '+')
	return op1+op2;
	
	if(op == '-')
	return op1-op2;
	
	if(op == '*')
	return op1*op2;
	
	if(op == '/')
	return op1/op2;
	
	if(op == '^')
	return power();
	
	return 0;
}
int power()// Basic power function
{
	int r=op1;
	int i=0;
	for(i=0;i<op2-1;i++)
	r*=op1;
	return r;
}




--------------------------------

MT2014109 Shah Dhruv Navinchandra_157466_assignsubmission_file_expr_v1_MT2014109.c
MT2014114 Shivang Vijaykumar Trivedi_156144_assignsubmission_file_expr_v1_MT2014114.c


		switch(exp[j])
		{
		case '+':
			j++;	
			if(exp[j]=='x')
			{
				ans=ans+value;
				j++;
			}	
			else 
			{
			int num=0;
			while(isdigit(exp[j])>0)
  			{
			int k=0;
    			temp[k]=exp[j]-48;
    			num=num*10+temp[k];
    			k++;
			j++;	
			}
			ans=ans+num;
			}
			break;
		case '-':
        		j++;
			if(exp[j]=='x')
			{
			ans=ans-value;
			j++;
			}	
			else 
			{
			int num=0;
			while(isdigit(exp[j])>0)
  			{
			int k=0;
    			temp[k]=exp[j]-48;
    			num=num*10+temp[k];
    			k++;
			j++;	
			}
			ans=ans-num;
			}
			break;

		case '*':
			j++;
			if(exp[j]=='x')
			{
			ans=ans*value;
			j++;
			}	
			else 
			{
			int num=0;
			while(isdigit(exp[j])>0)
		  	{
			int k=0;
		    	temp[k]=exp[j]-48;
		    	num=num*10+temp[k];
		    	k++;
			j++;	
			}
			ans=ans*num;
			}
			break;

		case '/':
			j++;
			if(exp[j]=='x')
			{
			ans=ans/value;
			j++;
			}	
			else 
			{
			int num=0;
			while(isdigit(exp[j])>0)
		  	{
			int k=0;
		    	temp[k]=exp[j]-48;
		    	num=num*10+temp[k];
		    	k++;
			j++;	
			}
			ans=ans/num;
			}
			break;

		case '^':
			j++;
			power=exp[j]-48;
			ans=pow(ans,power);
                        j++;
			break;
	
		case 'x':
			ans=value;
			j++;
			break;
			
			
		}
	}
	printf("\nP(%d)=%d",value,ans);
}
}


--------------------------------

MT2014116 Shweta Mishra_175278_assignsubmission_file_expr_v1_MT2014116.c
MT2014130 Vandana Jain_174575_assignsubmission_file_expr_v1_MT2014130.c


void p1(char [],int);
       int f=0;
       int sol(int f,int x,char op)
{
       int v=1;
       switch (op)
    {	
        case '+':return f+x;
		break;	
	case '-':return f-x;
		break;
	case '/':return f/x;
		break;
	case '*':return f*x;
		break;
	case '^':while(x!=0)
               {
		v=v*f;
		x--;	
	       }
                return v;
		break;
   }	
}

void main()
   {
         int j,i=0,at[10],var,len=0;
         char exp[50];

         scanf("%[^\n]",exp);

     do
       {
          scanf("%d",&var);
          at[i]=var;len++;i++;
       }
          while(var!=1000);
          printf("%s\n",exp);
          for(j=0;j<(len-1);j++)
  
              {
        
              p1(exp,at[j]);
             
              }

    }

void p1(char exp[],int var)
{
	
	char exp1[25];
	int i=0,g=0;
	int j=0,ans;
	int k=0,mn;
	int pos=0,a[10];
	int chk=0;
	char temp[25],op;
	
	char a2[56];
	
	int y=0,m=0;
	
	
//puts(expr);

for(i=0;exp[i]!='\0';i++)
    { 
        if(exp[i]==' ')
    {

        for(j=i;exp[j]!='\0';j++)
    {
        exp[j]=exp[j+1];
    }
        exp[j+1]='\0';i--;
    }

}
	pos=5;
	                   //printf("ghjgfj==\n");
	                   //chk=0;
        mn=0;

	                  //for(y=5;expr[y]!='\0';y++)



        y=5;
	temp[0]='\0';
	for(k=y;exp[k]!='\0';k++){
	if((exp[k]>='0')&&(exp[k]<='9'))
	{chk=0;
	
	temp[g]=exp[k];
	temp[g+1]='\0';
	pos++;g++;
	
}
        else if(exp[k]==exp[2])
            {
                     chk=1;
                     a[mn]=var;mn++;
            }	
       else
           {
                if(exp[k]!='\0')	
	       {
                         op=exp[k];
                         a2[m]=op;m++;a2[m]='\0';

                                                    //printf("abbcd");
               if(chk==0)
              {
                      f=atoi(temp);g=0;
                      a[mn]=f;mn++;
             }
	        
               }
	
}
}
          f=atoi(temp);
          a[mn]=f;mn++;
          i=0;j=0;
	
          ans=a[i];
          while(a2[j]!='\0')
   {  
                                   //printf("a[i]=%d",a[i]);
	ans=sol(ans,a[i+1],a2[j]); //printf("c=%c",a2[j]);
 

        i++;
        j++;
   }
        printf("%c%c%d%c%c%d\n",exp[0],exp[1],var,exp[3],exp[4],ans);
   }
	



--------------------------------

MT2014128 Turkar Devendrakumar Gendlal_170470_assignsubmission_file_expr_v1_MT2014128.c
MT2014139 Yuvraj Verma_172094_assignsubmission_file_expr_v1_MT2014139.c


-')
	return op1-op2;
	
	if(op == '*')
	return op1*op2;
	
	if(op == '/')
	return op1/op2;
	
	if(op == '^')
	

--------------------------------

MT2014137 Vikash Ranjan_130589_assignsubmission_file_expr_v1_MT2014137.c
MT2014138 Vinita Goyal_170894_assignsubmission_file_expr_v1_MT2014138.c


do{
	scanf("%d",&value[i]);
	
	  
	}while(value[i++]!=1000);
	i--;
        
	

	//system("clear");
	//printf("\nP(x)=%s",expr);
        for(ctr=0;ctr<i;ctr++)
	{
		result[j++]=calc(expr,value[ctr]);
	}
	//printf("\n");
 return 0;
}




int calc(char* expr, int value)
{
	int i=0,j=0,k=0,l,n=0,num=0,res;
	int op1,op2;
	static int f=0;
	int operand[50];
	char operator[50],var_char;	
	while(expr[i]!='\0')
	{
		
		if (isdigit(expr[i])==1)
		{

				num=0;
			 while(isdigit(expr[i])==1)
			{
				num=num*10+(expr[i]-'0');
				i=i+1;
			}
			 operand[j]=num;
			j=j+1;
                  i=i-1;		
		}

		else if (expr[i]=='^' || expr[i]=='+' || expr[i]=='-' || expr[i]=='*' || expr[i]=='/')
			
		operator[k++]=expr[i];
		
		
		else if (expr[i]>='a'||expr[i]>='z')
			{
				var_char=expr[i];
			operand[j++]=value;
			}
		else if (expr[i]==32)
			{
			
			//i=i+1;
			//printf("\n now i =%d\n",i);
			}
			
				
			
	i=i+1;
	}
	
	        op1=operand[0];
		op2=operand[1];
		l=2;

	for(n=0;n<k;n++)
	{
                		
		
		if(operator[n]=='^')
		  res=power(op1,op2);	
		 else if(operator[n]=='*')
		 res=op1*op2;
		else if(operator[n]=='/')
		 res=op1/op2;
		else if(operator[n]=='+')
		 res=op1+op2;
		else if(operator[n]=='-')
		 res=op1-op2;
		
		
		op1=res;
		op2=operand[l++];

	}
	if(f==0)
	{
		printf("